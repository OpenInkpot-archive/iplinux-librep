<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

  <!ENTITY dhfirstname "<firstname>Christian</firstname>">
  <!ENTITY dhsurname   "<surname>Marillat</surname>">
  <!ENTITY dhdate      "<date>april  5, 2001</date>">
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>marillat@debian.org</email>">
  <!ENTITY dhusername  "Christian Marillat">
  <!ENTITY dhucpackage "<refentrytitle>rep-xgettext</refentrytitle>">
  <!ENTITY dhpackage   "rep-xgettext">
  <!ENTITY debian      "<productname>Debian GNU/Linux</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2001</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose> extract i18n strings from lisp scripts.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>

	<arg><option>--include </option><replaceable>DEFINER</replaceable></arg>
	<arg><option>--c </option></arg>
	<arg><option>--pot </option></arg>
    
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para><command>&dhpackage;</command> The usual method of constructing
      message catalogue templates (.pot files) is to run xgettext on the C
      source files of the program (that have been annotated for i18n). 
      librep provides the &dhpackage program to perform the same task for
      files of Lisp code.</para>

  </refsect1>

  <refsect1>
    <title>OPTIONS</title>
    <variablelist>
      <varlistentry>
        <term><option>--include</option></term>
        <listitem>
          <para>include DEFINER. This is not documented by upstream.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term><option>--c</option></term>
        <listitem>
          <para>This makes it output pseudo C code containing the string constants found.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <variablelist>
      <varlistentry>
        <term><option>--pot</option></term>
        <listitem>
          <para>This makes it output in standart .pot file.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para>The programs are documented fully by <citetitle>John
      Harper</citetitle> available via the <application>Info</application> system.</para>
  </refsect1>

  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail; for
      the &debian; system (but may be used by others).</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
